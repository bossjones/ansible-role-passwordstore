# -*- coding: utf-8 -*-
# tasks for  ansible-role-passwordstore
---
- name: install apt packages
  package:
    name:
      - expect  # for automatic ssh key unlocking
      - gnupg2  # I want to be able to use gpg2 command for compatibility
      - git
      - xclip  # for putting password in clipboard
      - pinentry-tty  # for unlocking keys in agent without gui
      - pwgen  # password generator
      - pass
  become: yes

- name: ensure directories exist
  file:
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
    mode: 0700
  loop:
    - .ssh
    # - .ssh/keys
    - .gnupg
    - bin

# - name: copy GPG key for password store
#   copy:
#     dest: "{{ ansible_env.HOME }}/.gnupg/{{ key_filename }}"
#     content: "{{ lookup('passwordstore', 'personal-gpg-key returnall=true') }}"
#     mode: 0600
#   no_log: "{{ hide_sensitive_logs }}"
#   register: gpg_key_status

# - name: import gpg key
#   command: gpg2 --batch --import {{ ansible_env.HOME }}/.gnupg/{{ key_filename }}
#   when: gpg_key_status.changed

# - name: copy GPG trust database so that keys are trusted
#   copy:
#     # note that in src we want the HOME of ansible controller user
#     src: "{{ lookup('env', 'HOME') }}/.gnupg/trustdb.gpg"
#     dest: "{{ ansible_env.HOME }}/.gnupg/trustdb.gpg"
#     mode: 0600

# - name: configure git user email
#   git_config:
#     name: user.email
#     value: "{{ bossjones__passwordstore__git_config_email }}"
#     path: "{{ passwordstore_path }}"

# mkdir: created directory '/home/ubuntu/.password-store/'
# Password store initialized for 56C83F52

- name: "Check if ~/{{ bossjones__passwordstore__user }}-fingerprint file exists"
  stat:
    path: "~/{{ bossjones__passwordstore__user }}-fingerprint"
  register: stat_user_fingerprint
  changed_when: false
  ignore_errors: yes

- name: "Check if ~{{ bossjones__passwordstore__user }}/dev/ripasso/target/debug/ripasso-cursive file exists"
  stat:
    path: "~{{ bossjones__passwordstore__user }}/dev/ripasso/target/debug/ripasso-cursive"
  register: stat_ripasso_cursive_bin
  changed_when: false
  ignore_errors: yes

- name: pass | init
  shell: "pass init \"$(cat ~/{{ bossjones__passwordstore__user }}-fingerprint)\""
  args:
    chdir: "~"
    executable: /bin/bash
  changed_when: false
  register: res_pass_init
  become: yes
  become_user: "{{ bossjones__passwordstore__user }}"
  when: stat_user_fingerprint.stat.exists == False

# SOURCE: https://github.com/cortex/ripasso
- name: install deps for ripasso | ncurses ui for pass
  package:
    name:
      - cargo
      - libgtk-3-dev
      - qtdeclarative5-dev
      - libqt5svg5-dev
      - cmake
      - libncurses-dev
      - libssl-dev
      - libgpg-error-dev
      - libgpg-error0
      - libgpgme-dev
      - libgpgmepp-dev
      - libncursesw5
      - libncursesw5-dev
  become: yes

- name: Clone ripasso
  git:
    repo: https://github.com/cortex/ripasso.git
    dest: "~{{ bossjones__passwordstore__user }}/dev/ripasso"
    version: "c3eec97893180115008b0c81b5f5248b9f891cd8"
    force: yes
  become: yes
  become_user: "{{ bossjones__passwordstore__user }}"
  register: res_ripasso

- name: Cargo | build ripasso-cursive
  shell: |
    cargo build -p ripasso-cursive
    cp -a ~{{ bossjones__passwordstore__user }}/dev/ripasso/target/debug/ripasso-cursive ~/bin
  args:
    chdir: "~/dev/ripasso"
    executable: /bin/bash
  changed_when: false
  register: res_ripasso_build
  become: yes
  become_user: "{{ bossjones__passwordstore__user }}"
  when: stat_ripasso_cursive_bin.stat.exists == False

- debug:
    var: res_ripasso_build # not required. A variable name to debug.
  when: stat_ripasso_cursive_bin.stat.exists == False

- name: ensure directories exist
  file:
    dest: "~{{ bossjones__passwordstore__user }}/{{ item }}"
    state: directory
    mode: 0700
  loop:
    - bin
  become: yes
  become_user: "{{ bossjones__passwordstore__user }}"

- name: passmenu | download
  shell: |
    curl -L 'https://git.zx2c4.com/password-store/plain/contrib/dmenu/passmenu' > ~{{ bossjones__passwordstore__user }}/bin/passmenu;
    chmod +x ~{{ bossjones__passwordstore__user }}/bin/passmenu;
  args:
    executable: /bin/bash
  changed_when: false
  become: yes
  become_user: "{{ bossjones__passwordstore__user }}"
  # when: stat_user_fingerprint | failed

- name: docker-credential-pass | download
  shell: |
    wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz -O- | tar xz
    chmod +x ~/bin/docker-credential-pass
  args:
    chdir: "~/bin"
    executable: /bin/bash
  changed_when: false
  become: yes
  become_user: "{{ bossjones__passwordstore__user }}"
  when: bossjones__passwordstore__configure_password_store_docker | bool

- name: docker-credential-pass | download
  shell: |
    wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz -O- | tar xz
    chmod +x /usr/local/bin/docker-credential-pass
  args:
    chdir: "/usr/local/bin"
    executable: /bin/bash
  changed_when: false
  become: yes
  when: bossjones__passwordstore__configure_password_store_docker | bool

  # wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz -O- | tar xz


  # NOTE: install this https://github.com/tadfisher/pass-otp
